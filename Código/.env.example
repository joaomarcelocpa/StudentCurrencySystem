# =====================================================================
# Variáveis de Ambiente - Sistema de Moeda Estudantil Virtus
# =====================================================================
# Copie este arquivo para .env e ajuste conforme necessário
# cp .env.example .env
# =====================================================================

# ---------------------------------------------------------------------
# Database Configuration (PostgreSQL External - Azure)
# ---------------------------------------------------------------------
# Credenciais do banco Azure PostgreSQL
POSTGRES_USER=studentcurrency
POSTGRES_PASSWORD=sua-senha-aqui

# ---------------------------------------------------------------------
# Spring Boot - Database Connection
# ---------------------------------------------------------------------
# URL do banco Azure PostgreSQL (OBRIGATÓRIO)
# Substitua pela URL do seu servidor Azure PostgreSQL
SPRING_DATASOURCE_URL=jdbc:postgresql://seu-servidor.postgres.database.azure.com:5432/studentcurrency

# Exemplo:
# SPRING_DATASOURCE_URL=jdbc:postgresql://student-currency.postgres.database.azure.com:5432/studentcurrency

# ---------------------------------------------------------------------
# Spring Boot - JPA/Hibernate
# ---------------------------------------------------------------------
SPRING_JPA_HIBERNATE_DDL_AUTO=update
SPRING_JPA_SHOW_SQL=false
SPRING_JPA_FORMAT_SQL=true

# ---------------------------------------------------------------------
# Spring Boot - JWT Configuration
# ---------------------------------------------------------------------
# Secret para assinar tokens JWT (MUDE EM PRODUÇÃO!)
JWT_SECRET=404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970

# Tempo de expiração do token em milissegundos (86400000 = 24 horas)
JWT_EXPIRATION=86400000

# ---------------------------------------------------------------------
# Spring Boot - Server Configuration
# ---------------------------------------------------------------------
BACKEND_PORT=8080

# ---------------------------------------------------------------------
# Spring Boot - CORS Configuration
# ---------------------------------------------------------------------
# Origens permitidas (separadas por vírgula)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:4200

# Para produção, especifique seu domínio:
# CORS_ALLOWED_ORIGINS=https://seu-dominio.com,https://www.seu-dominio.com

# ---------------------------------------------------------------------
# Spring Boot - Logging
# ---------------------------------------------------------------------
# Níveis: TRACE, DEBUG, INFO, WARN, ERROR
LOGGING_LEVEL_SECURITY=INFO
LOGGING_LEVEL_APP=INFO

# Para desenvolvimento, use DEBUG:
# LOGGING_LEVEL_SECURITY=DEBUG
# LOGGING_LEVEL_APP=DEBUG

# ---------------------------------------------------------------------
# Frontend (Next.js)
# ---------------------------------------------------------------------
FRONTEND_PORT=3000

# URL da API para o frontend
NEXT_PUBLIC_API_URL=http://localhost:8080

# Para produção, use seu domínio:
# NEXT_PUBLIC_API_URL=https://api.seu-dominio.com

# Environment do Node (definido automaticamente no docker-compose.yml como development)
# NODE_ENV=development

# ---------------------------------------------------------------------
# IMPORTANTE - SEGURANÇA
# ---------------------------------------------------------------------
# ⚠️  NUNCA commite o arquivo .env no Git!
# ⚠️  Use senhas fortes em produção!
# ⚠️  Gere um novo JWT_SECRET para produção!
# ⚠️  Configure CORS adequadamente em produção!
# ⚠️  O banco de dados PostgreSQL está hospedado no Azure (externo ao Docker)
